Script started on 2020-04-16 17:50:39-0400
]0;djv78@gold02: ~/CS214Work/214/labs/09/java[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/java[00m$ cat Max.java
/* Max.java finds the maximum values in Java linked lists.
 *
 * Begun by: Dr. Adams, CS 214 at Calvin College.
 * Completed by: Duncan Van Keulen
 * Date: 4/16/2020
 */

import java.util.LinkedList;
import java.util.Iterator;
import java.util.Collections;

public class Max {

  public static void main(String [] args) {
    // define list1, list2, list3 here ...
    LinkedList<Integer> list1 = new LinkedList<Integer>();
    LinkedList<Integer> list2 = new LinkedList<Integer>();
    LinkedList<Integer> list3 = new LinkedList<Integer>();
    


    list1.add(99);    // 99, 88, 77, 66, 55
    list1.add(88);    // max is first
    list1.add(77);
    list1.add(66);  
    list1.add(55);

    list2.add(55);    // 55, 66, 77, 88, 99
    list2.add(66);    // max is last
    list2.add(77);  
    list2.add(88);  
    list2.add(99);  
  
    list3.add(55);    // 55, 77, 99, 88, 66
    list3.add(77);    // max is in the middle
    list3.add(99);  
    list3.add(88);  
    list3.add(66);  
  
    print(list1); 
    print(list2); 
    print(list3);

   // display maxima of the 3 lists...
    System.out.println("Max of list1: " + Collections.max(list1));
    System.out.println("Max of list2: " + Collections.max(list2));
    System.out.println("Max of list3: " + Collections.max(list3));
  }

  /**
   * print() displays a LinkedList on the console.
   *
   * @param: aList, a LinkedList<Integer>
   * 
   *                Postcondition: the Integer values in aList have been displayed
   *                to System.out, separated by spaces.
   */
  public static void print(LinkedList<Integer> aList) {
    Iterator<Integer> listIterator = aList.iterator();
    while (listIterator.hasNext()) {
        System.out.print(listIterator.next() + " ");
    }
    System.out.print('\n');
  }
}
]0;djv78@gold02: ~/CS214Work/214/labs/09/java[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/java[00m$ ja[K[Kmake
javac -deprecation Max.java
]0;djv78@gold02: ~/CS214Work/214/labs/09/java[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/java[00m$ java max[K[K[KMax 
99 88 77 66 55 
55 66 77 88 99 
55 77 99 88 66 
Max of list1: 99
Max of list2: 99
Max of list3: 99
]0;djv78@gold02: ~/CS214Work/214/labs/09/java[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/java[00m$ exit

Script done on 2020-04-16 17:51:05-0400
Script started on 2020-04-16 17:50:18-0400
]0;djv78@gold02: ~/CS214Work/214/labs/09/ada[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/ada[00m$ make
gnatbind  max.ali
gnatlink  max.ali -o adaMax
]0;djv78@gold02: ~/CS214Work/214/labs/09/ada[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/ada[00m$ ./ma[K[KadaMax 
          99          88          77          66          55
          55          66          77          88          99
          55          77          99          88          66
The maximum value in list 1 is          99
The maximum value in list 2 is          99
The maximum value in list 3 is          99
]0;djv78@gold02: ~/CS214Work/214/labs/09/ada[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/ada[00m$ exit

Script done on 2020-04-16 17:50:28-0400
Script started on 2020-04-16 17:49:54-0400
]0;djv78@gold02: ~/CS214Work/214/labs/09/clojure[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/clojure[00m$ cat src/max.clj 
;; max.clj tests a function to search a list for its maximum value.
;;
;; Output: three lists, and 
;;          the results of calling a maxList() function on them.
;;
;; Usage: clojure -m max
;;
;; Begun by: Dr. Adams, CS 214 at Calvin College.
;; Completed by: Duncan Van Keulen
;; Date: 4/16/2020
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns max)

(load "listOps")                      ; load module

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function -main tests function listMax(). 
;; Output: the results of testing listMax() on various lists.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn -main []
  (let
    [ 
      list1 '(99 88 77 66 55)        ; max is first value
      list2 (list 55 66 77 88 99)    ; max is last value
      list3 (list 55 77 99 88 66)    ; max is middle value
      emptyList '()                  ; list is empty
    ]

    (println)
    (println "list1: " list1)        ; print list1,
    (println "list2: " list2)        ;   list2,
    (println "list3: " list3)        ;   list3,
    (println "empty: " emptyList)    ;   list3,
    (println)                        ;   and their maxima
    (println "The max value in list1 is: " (listMax list1))
    (println "The max value in list2 is: " (listMax list2))
    (println "The max value in list3 is: " (listMax list3))
    (println)
    (println "The max of an empty list is: " (listMax emptyList))
    (println)

    (println "The max value in list1 using listMax2 is: " (listMax2 list1))
    (println "The max value in list2 using listMax2 is: " (listMax2 list2))
    (println "The max value in list3 using listMax2 is: " (listMax2 list3))
    (println)
    (println "The max of an empty list using listMax2 is is: " (listMax2 emptyList))
    (println)
  )
)

]0;djv78@gold02: ~/CS214Work/214/labs/09/clojure[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/clojure[00m$ make
clojure -m max

list1:  (99 88 77 66 55)
list2:  (55 66 77 88 99)
list3:  (55 77 99 88 66)
empty:  ()

The max value in list1 is:  99
The max value in list2 is:  99
The max value in list3 is:  99

The max of an empty list is:  nil

The max value in list1 using listMax2 is:  99
The max value in list2 using listMax2 is:  99
The max value in list3 using listMax2 is:  99

The max of an empty list using listMax2 is is:  nil

]0;djv78@gold02: ~/CS214Work/214/labs/09/clojure[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/clojure[00m$ exit

Script done on 2020-04-16 17:50:09-0400
Script started on 2020-04-16 17:49:35-0400
]0;djv78@gold02: ~/CS214Work/214/labs/09/ruby[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/ruby[00m$ cat max.rb
# max.rb tests a Ruby linked list.
#
# Begun by: Dr. Adams for CS 214 at Calvin College.
# Completed by: Duncan Van Keulen
# Date: 4/16/2020

require './List'

list1 = List.new
list2 = List.new
list3 = List.new

list1.append(99).append(88).append(77).append(66).append(55)
list2.append(55).append(66).append(77).append(88).append(99)
list3.append(55).append(77).append(99).append(88).append(66)

list1.print 
puts
puts "Maximum of list1: #{list1.max}"

list2.print 
puts
puts "Maximum of list2: #{list2.max}"

list3.print 
puts
puts "Maximum of list3: #{list3.max}"

]0;djv78@gold02: ~/CS214Work/214/labs/09/ruby[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/ruby[00m$ ruby max.rb
 99 88 77 66 55
Maximum of list1: 99
 55 66 77 88 99
Maximum of list2: 99
 55 77 99 88 66
Maximum of list3: 99
]0;djv78@gold02: ~/CS214Work/214/labs/09/ruby[01;32mdjv78@gold02[00m:[01;34m~/CS214Work/214/labs/09/ruby[00m$ exit

Script done on 2020-04-16 17:49:46-0400
