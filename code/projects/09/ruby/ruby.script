Script started on 2020-04-20 19:36:01-0400
]0;djv78@gold03: ~/CS214Work/214/projects/09/ruby[01;32mdjv78@gold03[00m:[01;34m~/CS214Work/214/projects/09/ruby[00m$ cat List.rb
# List.rb implements a linked list structure in Ruby.
#
# Begun by: Dr. Adams, for CS 214 at Calvin College.
# Completed by: Duncan Van Keulen
# Date: 4/20/2020
#######################################################

require 'test/unit/assertions'
include Test::Unit::Assertions

class List

   # initialize a List to be empty
   # Postcondition: first == nil and last == nil and length == 0
   def initialize
      @first, @last = nil
      @length = 0
   end 

   # create reader method for length
   attr_reader :length


   # Am I empty?
   # Return: length == 0
   def empty?
      @length == 0
   end
  
   # append a value to me
   # Receive: value, the item to be appended
   # Postcondition: my last item is value and
   #                 my length is one more than it was
   def append(value)
      newNode = Node.new(value, nil)

      if empty?
         @first = newNode
      else
         @last.next = newNode      
      end

      @last = newNode
      @length += 1
      self
   end


   # print my items
   # Postcondition: my items have been displayed to the screen

   def print
      temp = @first
      while !temp.nil?
         printf " #{temp.value}"
         temp = temp.next
      end
   end


   # find my maximum item
   # Return: my maximum item

   def max
      temp = @first
      maxValue = -999999999
      while (temp != nil)
         if (temp.value > maxValue)
            maxValue = temp.value
         end
         temp = temp.next
      end 
      return maxValue
   end

   # Search for a value in a list
   # Return: the index of item, or -1 if not found
   
   def search(value)
      temp = @first
      i = 0
      while (temp != nil)
         if (temp.value == value)
            return i
         else
            i = i + 1
            temp = temp.next
         end
      end
      return -1
   end

   class Node
      def initialize(item, link)
         @value = item
         @next = link
      end

      attr_reader :value
      attr_accessor :next
   end

end

]0;djv78@gold03: ~/CS214Work/214/projects/09/ruby[01;32mdjv78@gold03[00m:[01;34m~/CS214Work/214/projects/09/ruby[00m$ cat max.rb
# max.rb tests a Ruby linked list.
#
# Begun by: Dr. Adams for CS 214 at Calvin College.
# Completed by: Duncan Van Keulen
# Date: 4/20/2020

require './List'

list1 = List.new
list2 = List.new
list3 = List.new
list4 = List.new

list1.append(99).append(88).append(77).append(66).append(55)
list2.append(55).append(66).append(77).append(88).append(99)
list3.append(55).append(77).append(99).append(88).append(66)
list4.append(11).append(22).append(33).append(44).append(55) # 99 not present

# Print function
list1.print 
puts
puts "Maximum of list1: #{list1.max}"

list2.print 
puts
puts "Maximum of list2: #{list2.max}"

list3.print 
puts
puts "Maximum of list3: #{list3.max}"

# Test out the search function
list1.print
puts
puts "99 is in position #{list1.search(99)} for list1"

list2.print
puts
puts "99 is in position #{list2.search(99)} for list2"

list3.print
puts
puts "99 is in position #{list3.search(99)} for list3"

list4.print
puts
if (list4.search(99) == -1)
    puts "99 not present in list4, -1 returned"
end

]0;djv78@gold03: ~/CS214Work/214/projects/09/ruby[01;32mdjv78@gold03[00m:[01;34m~/CS214Work/214/projects/09/ruby[00m$ ls
List.rb  max.rb  ruby.script
]0;djv78@gold03: ~/CS214Work/214/projects/09/ruby[01;32mdjv78@gold03[00m:[01;34m~/CS214Work/214/projects/09/ruby[00m$ ruby max.rb
 99 88 77 66 55
Maximum of list1: 99
 55 66 77 88 99
Maximum of list2: 99
 55 77 99 88 66
Maximum of list3: 99
 99 88 77 66 55
99 is in position 0 for list1
 55 66 77 88 99
99 is in position 4 for list2
 55 77 99 88 66
99 is in position 2 for list3
 11 22 33 44 55
99 not present in list4, -1 returned
]0;djv78@gold03: ~/CS214Work/214/projects/09/ruby[01;32mdjv78@gold03[00m:[01;34m~/CS214Work/214/projects/09/ruby[00m$ exit

Script done on 2020-04-20 19:36:23-0400
