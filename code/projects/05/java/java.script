Script started on 2020-03-06 14:14:29-0500
]0;djv78@gold09: ~/CS214Work/214/projects/05/java[01;32mdjv78@gold09[00m:[01;34m~/CS214Work/214/projects/05/java[00m$ cat Roots.java
/* Roots.java is a method and driver for finding the roots of a 
 * quadratic equation using the quadratic formula.
 * 
 * By: Duncan Van Keulen on 3-6-2020
 ***************************************************************/

import java.util.Scanner;
import java.lang.Math;

public class Roots {
    public static void main(String[] args) {
        Scanner keyboard = new Scanner(System.in);

        // Get inputs for a, b, c
        System.out.print("Quadratic Root Finder\nEnter a: ");
        double a = keyboard.nextDouble();
    
        System.out.print("Enter b: ");
        double b = keyboard.nextDouble();
    
        System.out.print("Enter c: ");
        double c = keyboard.nextDouble();

        double[] rootsArr = new double[2];

        // Only display roots if they are valid
        if(root(a, b, c, rootsArr)) {
            System.out.println("The roots are " + rootsArr[0] + " and " + rootsArr[1]);
        }
    }

    /* 
    * root() calculates the quadratic roots of an equation using the quadratic formula
    * will return true if calculation succeeded and false if it failed.
    * double a, b, c are the a, b, c numbers in the quadratic formula
    * double[] rootsArr is the "pass by reference" array that will contain the roots
    *******************************************************************************/
    public static boolean root(double a, double b, double c, double[] rootsArr) {
        if (a != 0) {
            double arg = Math.pow(b, 2.0) - 4 * a * c;
            if (arg >=0) {
                rootsArr[0] = (-b + Math.sqrt(arg))/(2*a);
                rootsArr[1] = (-b - Math.sqrt(arg))/(2*a);
                return true;
            }
            else {
                System.out.println("root(): b^2 - 4ac is negative!");
                rootsArr[0] = 0.0;
                rootsArr[1] = 0.0;
                return false;
            }
        }
        else {
            System.out.println("root(): a is zero!");
            rootsArr[0] = 0.0;
            rootsArr[1] = 0.0;
            return false;
        }
    }
}


]0;djv78@gold09: ~/CS214Work/214/projects/05/java[01;32mdjv78@gold09[00m:[01;34m~/CS214Work/214/projects/05/java[00m$ c[Kjavac - depre[K[K[K[K[K[Kdeprecation Roots.java 
]0;djv78@gold09: ~/CS214Work/214/projects/05/java[01;32mdjv78@gold09[00m:[01;34m~/CS214Work/214/projects/05/java[00m$ java Roots 
Quadratic Root Finder
Enter a: 2
Enter b: 2
Enter c: 2
root(): b^2 - 4ac is negative!
]0;djv78@gold09: ~/CS214Work/214/projects/05/java[01;32mdjv78@gold09[00m:[01;34m~/CS214Work/214/projects/05/java[00m$ java Roots 
Quadratic Root Finder
Enter a: 0
Enter b: 2
Enter c: 2
root(): a is zero!
]0;djv78@gold09: ~/CS214Work/214/projects/05/java[01;32mdjv78@gold09[00m:[01;34m~/CS214Work/214/projects/05/java[00m$ java Roots 
Quadratic Root Finder
Enter a: 1
Enter b: 4
Enter c: 4
The roots are -2.0 and -2.0
]0;djv78@gold09: ~/CS214Work/214/projects/05/java[01;32mdjv78@gold09[00m:[01;34m~/CS214Work/214/projects/05/java[00m$ java Roots 
Quadratic Root Finder
Enter a: 1
Enter b: 8
Enter c: 8
The roots are -1.1715728752538097 and -6.82842712474619
]0;djv78@gold09: ~/CS214Work/214/projects/05/java[01;32mdjv78@gold09[00m:[01;34m~/CS214Work/214/projects/05/java[00m$ java Roots 
Quadratic Root Finder
Enter a: 1
Enter b: -5
Enter c: 6
The roots are 3.0 and 2.0
]0;djv78@gold09: ~/CS214Work/214/projects/05/java[01;32mdjv78@gold09[00m:[01;34m~/CS214Work/214/projects/05/java[00m$ exit

Script done on 2020-03-06 14:15:25-0500
