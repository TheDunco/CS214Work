Script started on 2020-04-27 17:16:16-0400
]0;djv78@gold03: ~/CS214Work/214/projects/10/java[01;32mdjv78@gold03[00m:[01;34m~/CS214Work/214/projects/10/java[00m$ ls
Bird.class   Birds.java  FlyingBird.class  Goose.java   Kiwi.java      Ostrich.java  Penguin.class      WalkingBird.java
Bird.java    Duck.class  FlyingBird.java   java.script  Makefile       Owl.class     Penguin.java
Birds.class  Duck.java   Goose.class       Kiwi.class   Ostrich.class  Owl.java      WalkingBird.class
]0;djv78@gold03: ~/CS214Work/214/projects/10/java[01;32mdjv78@gold03[00m:[01;34m~/CS214Work/214/projects/10/java[00m$ git [Kcat *([K.java
/* Bird.java provides a Bird class.
 *
 * Begun by: Prof. Adams, for CS 214 at Calvin College.
 * Completed by: Duncan Van Keulen
 * Date: 4/23/2020
 ******************************************************/

import java.io.*;

public class Bird
{

  /* default constructor
  * PostCond: myName == "".
  */
  public Bird() {
    myName = "";
  }


  /* explicit constructor
  * Receive: name, a String 
  * PostCond: myName == name.
  */
  public Bird(String name) {
    myName = name;
  }


  /* Name accessor
  * Return: myName.
  */
  public String getName() {
    return myName;
  }


  /* A Bird's Call
  * Return: a default bird-call ("Squawk!").
  */

  public String call() {
    return "Squaaaaaaaaaawk!";
  } 

  /* Output a Bird 
  * Output: Everything known about myself
  *          to the standard output stream.
  */

  public void print()
  {
    System.out.println( getName() + ' ' + getClass().getName() + " just " + movement()
                      + " and said " + call() );
  }

  /* A Bird's Movement
  * Return: a default bird movement ("existed")
  */
  public String movement() {
    return "existed";
  }



  private String myName;
}

/* Birds.java illustrates inheritance and polymorphism.
 *
 * Begun by: Joel Adams, for CS 214 Lab 10 at Calvin College.
 * Completed by: Duncan Van Keulen
 * Date: 4/23/2020
 *********************************************************/

public class Birds {
  
  public static void main(String[] args) {
    System.out.println("\nWelcome to the Bird Park!\n");

    Bird bird0 = new Bird();

    Bird bird1 = new Bird("Hawkeye");
    bird1.print();

    Duck bird2 = new Duck("Donald");
    bird2.print();

    Goose bird3 = new Goose("Mother Goose");
    bird3.print();

    Owl bird4 = new Owl("Woodsey");
    bird4.print();

    Penguin bird5 = new Penguin("Peter");
    bird5.print();
    
    Ostrich bird6 = new Ostrich("Orville");
    bird6.print();
    
    Kiwi bird7 = new Kiwi("Kathy");
    bird7.print();
    System.out.println();


  }
}

/* Duck.java provides a Duck subclass of Bird.
 *
 * Begun by: Prof. Adams, for CS 214 at Calvin College.
 * Completed by: Duncan Van Keulen
 * Date: 4/23/2020
 ******************************************************/

public class Duck extends FlyingBird {
    

  /* default constructor
  */
  public Duck() {
    super();
  }

    /* explicit constructor
  * Receive: name, a String 
  * PostCond: myName == name.
  */
  public Duck(String name) {     
    super(name);
  } 

  /* A Duck's Call
  * Return: a duck-call ("Quack!").
  */
  public String call() {
    return "Quack!";
  } 
}

/* FlyingBird.java provides extends the bird class for flying birds
 *
 * By: Duncan Van Keulen
 * Date: 4/27/2020
 ******************************************************/

public class FlyingBird extends Bird {

    /* default constructor
    */
    public FlyingBird() {
        super();
    }
    
    /* explicit constructor
    * Recieve: String name - the name of the FlyingBrid
    * Post: FlyingBird will be initialized with that name
    */
    public FlyingBird(String name) {
        super(name);
    }

    /* movement of a flying bird (flying)
    * Return: a string indicating movement ("flew by")
    */
    public String movement() {
        return "flew by";
    }
}/* Goose.java provides a Goose subclass of Bird.
 *
 * Begun by: Prof. Adams, for CS 214 at Calvin College.
 * Completed by: Duncan Van Keulen
 * Date: 4/23/2020
 ******************************************************/

public class Goose extends FlyingBird {


  /*default constructor
  */
  public Goose() {
    super();
  }

  /* explicit constructor
  * Receive: name, a String 
  * PostCond: myName == name.
  */
  public Goose(String name) {     
    super(name);
  } 

  /* A Goose's Call
  * Return: a goose-call ("Honk!").
  */
  public String call() {
    return "Honk!";
  }

} 

/* Kiwi.java provides an Kiwi subclass of WalkingBird.
 *
 * By: Duncan Van Keulen
 * Date: 4/27/2020
 ******************************************************/

public class Kiwi extends WalkingBird {


    /* default constructor
    */
    public Kiwi() {
        super();
    }

    /* explicit constructor
    * Receive: name, a String 
    * PostCond: myName == name.
    */
    public Kiwi(String name) {
        super(name);
    }

    /* An Kiwi's Call
    * Return: an Kiwi-call ("Whoo-hoo!").
    */
    public String call() {
        return "Sqwee! Sqwee!";
    }

} 
/* Ostrich.java provides an Ostrich subclass of WalkingBird.
 *
 * By: Duncan Van Keulen
 * Date: 4/27/2020
 ******************************************************/

public class Ostrich extends WalkingBird {


    /* default constructor
    */
    public Ostrich() {
        super();
    }

    /* explicit constructor
    * Receive: name, a String 
    * PostCond: myName == name.
    */
    public Ostrich(String name) {
        super(name);
    }

    /* An Ostrich's Call
    * Return: an Ostrich-call ("Whoo-hoo!").
    */
    public String call() {
        return "Snork!";
    }

} 
/* Owl.java provides an Owl subclass of Bird.
 *
 * Begun by: Prof. Adams, for CS 214 at Calvin College.
 * Completed by: Duncan Van Keulen
 * Date: 4/23/2020
 ******************************************************/

public class Owl extends FlyingBird {


  /* default constructor
  */
  public Owl() {
    super();
  }

  /* explicit constructor
  * Receive: name, a String 
  * PostCond: myName == name.
  */
  public Owl(String name) {
    super(name);
  }


  /* An Owl's Call
  * Return: an owl-call ("Whoo-hoo!").
  */
  public String call() {
    return "Whoo hoo!";
  }

} 

/* Penguin.java provides an Penguin subclass of WalkingBird.
 *
 * By: Duncan Van Keulen
 * Date: 4/27/2020
 ******************************************************/

public class Penguin extends WalkingBird {

    /* default constructor
    */
    public Penguin() {
        super();
    }

    /* explicit constructor
    * Receive: name, a String 
    * PostCond: myName == name.
    */
    public Penguin(String name) {
        super(name);
    }

    /* An Penguin's Call
    * Return: an Penguin-call ("Whoo-hoo!").
    */

    public String call() {
        return "Huh-huh-huh-huuuuh!";
    }

} 
/* WalkingBird.java provides extends the bird class for walking birds
 *
 * By: Duncan Van Keulen
 * Date: 4/27/2020
 ******************************************************/

public class WalkingBird extends Bird {

    /* default constructor
    */
    public WalkingBird() {
        super();
    }

    /* Explicit constructor
    * Recieve: String name - the name of the walking bird
    * Post: WalkingBird will be initialized with that name
    */
    public WalkingBird(String name) {
        super(name);
    }

    /* the movement of a walking bird
    * Return: A string representing the movement of a walking bird (walking)
    */
    public String movement() {
        return "walked by";
    }
}]0;djv78@gold03: ~/CS214Work/214/projects/10/java[01;32mdjv78@gold03[00m:[01;34m~/CS214Work/214/projects/10/java[00m$ l[Kmake
javac -deprecation Birds.java
]0;djv78@gold03: ~/CS214Work/214/projects/10/java[01;32mdjv78@gold03[00m:[01;34m~/CS214Work/214/projects/10/java[00m$ java Birds

Welcome to the Bird Park!

Hawkeye Bird just existed and said Squaaaaaaaaaawk!
Donald Duck just flew by and said Quack!
Mother Goose Goose just flew by and said Honk!
Woodsey Owl just flew by and said Whoo hoo!
Peter Penguin just walked by and said Huh-huh-huh-huuuuh!
Orville Ostrich just walked by and said Snork!
Kathy Kiwi just walked by and said Sqwee! Sqwee!

]0;djv78@gold03: ~/CS214Work/214/projects/10/java[01;32mdjv78@gold03[00m:[01;34m~/CS214Work/214/projects/10/java[00m$ exit

Script done on 2020-04-27 17:16:56-0400
